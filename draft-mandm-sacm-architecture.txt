



SACM Working Group                                          A. Montville
Internet-Draft                                                 B. Munyan
Intended status: Informational                                       CIS
Expires: May 26, 2018                                  November 22, 2017


   Security Automation and Continuous Monitoring (SACM) Architecture
                  draft-mandm-sacm-architecture-latest

Abstract

   This memo documents the notional Security Automation and Continuous
   Monitoring (SACM) architecture to be used by SACM participants when
   crafting SACM-related solutions.  The SACM architecture is predicated
   upon information gleaned from SACM Use Cases and Requirements
   ([RFC7632] and [RFC8248] respectively) and terminology as found in
   [I-D.ietf-sacm-terminology].

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on May 26, 2018.

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of




Montville & Munyan        Expires May 26, 2018                  [Page 1]

Internet-Draft              SACM Architecture              November 2017


   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Terms and Definitions . . . . . . . . . . . . . . . . . . . .   2
   3.  The Basic Architecture  . . . . . . . . . . . . . . . . . . .   2
   4.  A Word On SACM Components, Capabilities, and Interfaces . . .   4
   5.  Enumerating SACM components . . . . . . . . . . . . . . . . .   5
   6.  Privacy Considerations  . . . . . . . . . . . . . . . . . . .   5
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .   5
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   5
   9.  Informative References  . . . . . . . . . . . . . . . . . . .   5
   Appendix A.  Endpoint Compliance Profile as a Collector . . . . .   6
   Appendix B.  Mapping to RFC8248 . . . . . . . . . . . . . . . . .   8
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   8

1.  Introduction

   The SACM working group has experienced some difficulty gaining
   consensus around a single architectural vision.  Our hope is that
   this document begins to alleviate this.  We have recognized viability
   in approaches typically thought to be at odds with each other -
   specifically [I-D.ietf-sacm-ecp] and [I-D.ietf-mile-xmpp-grid].  We
   believe that, in reality, these approaches complement each other to
   more completely meet the spirit of [RFC8248].

   The authors explicitly recognize that some state collection
   mechanisms exist today, some do not, and some that do may need to be
   improved over time.  The architecture described in this document
   seeks to accommodate this recognition by first defining a fairly
   generic abstract architecture, then making that architecture somewhat
   more concrete.

2.  Terms and Definitions

   This draft defers to [I-D.ietf-sacm-terminology] for terms and
   definitions.

3.  The Basic Architecture

   The architectural approach proposed herein recognizes existing state
   collection mechanisms and makes every attempt to respect [RFC7632]
   and [RFC8248].






Montville & Munyan        Expires May 26, 2018                  [Page 2]

Internet-Draft              SACM Architecture              November 2017


   +----------+      +------+   +------------+
   |Repository|      |Policy|   |Orchestrator|
   +----^-----+      +--^---+   +----^-------+       +----------------+
     A  |            B  |          C |               | Downstream Uses|
        |               |            |               | +-----------+  |
   +----v---------------v------------v-------+       | |Evaluations|  |
   |       Message Transfer System           <-------> +-----------+  |
   +----------------^------------------------+     D | +---------+    |
                    |                                | |Analytics|    |
                    |                                | +---------+    |
            +-------v---------                       | +---------+    |
            | Transfer System |                      | |Reporting|    |
            |    Connector    |                      | +---------+    |
            +-------^---------+                      +----------------+
                    |
                    |
            +-------v-------+       NOTE: Some collection mechanisms
            |   Collection  |             may already exist, whereas
            |     System    |             others may not.
            +---------------+


                      Figure 1: Notional Architecture

   As shown in Figure 1, the notional SACM architecture consists of some
   basic SACM Components using a message transfer system to communicate.
   While not depicted, the message transfer system is expected to
   maximally align with the requirements described in [RFC8248], which
   means that the message transfer system will support brokered (i.e.
   point-to-point) and proxied data exchange.

   Additionally, component-specific interfaces (i.e. such as A, B, C,
   and D in the figure above) are expected to be specified logically
   then bound to one or more specific implementations.  This should be
   done for each capability related to the given SACM Component.
















Montville & Munyan        Expires May 26, 2018                  [Page 3]

Internet-Draft              SACM Architecture              November 2017


  +----------+      +------+   +------------+
  |Repository|      |Policy|   |Orchestrator|
  +----^-----+      +--^---+   +----^-------+
       |               |            |
       |               |            |
  +----v---------------v------------v-----------------+     +-----------------+
  |                     XMPP-Grid                     <-----> Downstream Uses |
  +-----^-------------^-------------^-------------^---+     +-----------------+
        |             |             |             |
        |             |             |             |
   +----v----+   +----v----+   +----v----+   +----v----+
   |XMPP-Grid|   |XMPP-Grid|   |XMPP-Grid|   |XMPP-Grid|
/~~|Connector|~~~|Connector|~~~|Connector|~~~|Connector|~~\
|  +----^----+   +----^----+   +----^----+   +----^----+  |
|       |             |             |             |       |
|  +----v----+   +----v-----+  +----v----+   +----v----+  |
|  |ECP/SWIMA|   |Datastream|  |YANG Push|   |  IPFIX  |  |
|  +---------+   +----------+  +---------+   +---------+  |
|                      Collectors                         |
\~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/

                      Figure 2: Detailed Architecture

   In Figure 2, we have a more detailed view of the architecture - one
   that fosters the development of a pluggable ecosystem of cooperative
   tools.  Existing collection mechanisms (ECP/SWIMA included) can be
   brought into this architecture by specifying the interface of the
   collector and creating the XMPP-Grid Connector.  Additionally, this
   architecture does not preclude point-to-point interfaces.

4.  A Word On SACM Components, Capabilities, and Interfaces

   As previously mentioned, the SACM Architecture consists of a variety
   of SACM Components, and named components are intended to embody one
   or more specific capabilities.  Interacting with these capabilities
   will require at least two levels of interface specification.  The
   first is a logical interface specification, and the second is at
   least one binding to a specific transfer mechanism, where the
   preferred transfer mechanism would be XMPP-grid.

   Consider a policy server conforming to [I-D.ietf-mile-rolie].
   [I-D.ietf-mile-rolie] describes a RESTful way based on the ATOM
   Publishing Protocol ([RFC5023]) to find specific data collections.
   While this represents a specific binding (i.e.  RESTful API based on
   [RFC5023]), there is a more abstract way to look at ROLIE.  ROLIE
   provides notional workspaces and collections, and provides the
   concept of information categories and links.  Strictly speaking,
   these are logical concepts independent of the RESTful binding ROLIE



Montville & Munyan        Expires May 26, 2018                  [Page 4]

Internet-Draft              SACM Architecture              November 2017


   specifies.  In other words, ROLIE binds a logical interface (i.e.
   GET workspace, GET collection, SET entry, and so on) to a specific
   mechanism (namely an ATOM Publication Protocol extension).  It is not
   inconceivable to believe there could be a different interface
   mechanism, or a connector, providing these same operations using
   XMPP-Grid as the transfer mechanism.

5.  Enumerating SACM components

   The list of SACM Components is theoretically endless, but we need to
   start somewhere.  The following is a list of suggested SACM
   Components.

   o  Vulnerability Information Repository

   o  Software Inventory Collector

   o  Software Inventory Repository

   o  Configuration Policy Repository

   o  Configuration State Repository

   o  Vulnerability Management Orchestrator

   o  Configuration Management Orchestrator

6.  Privacy Considerations

   TODO

7.  Security Considerations

   TODO

8.  IANA Considerations

   TODO

9.  Informative References

   [I-D.ietf-mile-rolie]
              Field, J., Banghart, S., and D. Waltermire, "Resource-
              Oriented Lightweight Information Exchange", draft-ietf-
              mile-rolie-14 (work in progress), November 2017.






Montville & Munyan        Expires May 26, 2018                  [Page 5]

Internet-Draft              SACM Architecture              November 2017


   [I-D.ietf-mile-xmpp-grid]
              Cam-Winget, N., Appala, S., Pope, S., and P. Saint-Andre,
              "Using XMPP for Security Information Exchange", draft-
              ietf-mile-xmpp-grid-04 (work in progress), October 2017.

   [I-D.ietf-sacm-ecp]
              Haynes, D., Fitzgerald-McKay, J., and L. Lorenzin,
              "Endpoint Compliance Profile", draft-ietf-sacm-ecp-00
              (work in progress), September 2017.

   [I-D.ietf-sacm-nea-swid-patnc]
              Schmidt, C., Haynes, D., Coffin, C., Waltermire, D., and
              J. Fitzgerald-McKay, "Software Inventory Message and
              Attributes (SWIMA) for PA-TNC", draft-ietf-sacm-nea-swid-
              patnc-01 (work in progress), March 2017.

   [I-D.ietf-sacm-terminology]
              Birkholz, H., Lu, J., Strassner, J., and N. Cam-Winget,
              "Security Automation and Continuous Monitoring (SACM)
              Terminology", draft-ietf-sacm-terminology-13 (work in
              progress), July 2017.

   [RFC5023]  Gregorio, J., Ed. and B. de hOra, Ed., "The Atom
              Publishing Protocol", RFC 5023, DOI 10.17487/RFC5023,
              October 2007, <https://www.rfc-editor.org/info/rfc5023>.

   [RFC7632]  Waltermire, D. and D. Harrington, "Endpoint Security
              Posture Assessment: Enterprise Use Cases", RFC 7632,
              DOI 10.17487/RFC7632, September 2015, <https://www.rfc-
              editor.org/info/rfc7632>.

   [RFC8248]  Cam-Winget, N. and L. Lorenzin, "Security Automation and
              Continuous Monitoring (SACM) Requirements", RFC 8248,
              DOI 10.17487/RFC8248, September 2017, <https://www.rfc-
              editor.org/info/rfc8248>.

Appendix A.  Endpoint Compliance Profile as a Collector

   The SACM working group has accepted work on the Endpoint Compliance
   Profile [I-D.ietf-sacm-ecp], which describes a collection
   architecture and may be viewed as a collector coupled with a
   collection-specific repository.









Montville & Munyan        Expires May 26, 2018                  [Page 6]

Internet-Draft              SACM Architecture              November 2017


                                 Posture Manager              Endpoint
                Orchestrator    +---------------+        +---------------+
                +--------+      |               |        |               |
                |        |      | +-----------+ |        | +-----------+ |
                |        |<---->| | Posture   | |        | | Posture   | |
                |        | pub/ | | Validator | |        | | Collector | |
                |        | sub  | +-----------+ |        | +-----------+ |
                +--------+      |      |        |        |      |        |
                                |      |        |        |      |        |
Evaluator       Repository      |      |        |        |      |        |
+------+        +--------+      | +-----------+ |<-------| +-----------+ |
|      |        |        |      | | Posture   | | report | | Posture   | |
|      |        |        |      | | Collection| |        | | Collection| |
|      |<-----> |        |<-----| | Manager   | | query  | | Engine    | |
|      |request/|        | store| +-----------+ |------->| +-----------+ |
|      |respond |        |      |               |        |               |
|      |        |        |      |               |        |               |
+------+        +--------+      +---------------+        +---------------+


                   Figure 3: ECP Collection Architecture

   In Figure 3, any of the communications between the Posture Manager
   and ECP components to the its left could be performed directly or
   indirectly using a given message transfer mechanism.  For example,
   the pub/sub interface between the Orchestrator and the Posture
   Manager could be using a proprietary method or using
   [I-D.ietf-mile-xmpp-grid] or some other pub/sub mechanism.  Similar
   the store connection from the Posture Manager to the Repository could
   be performed internally to a given implementation, via a RESTful API
   invocation over HTTPS, or even over a pub/sub mechanism.

   Our assertion is that the Evaluator, Respository, Orchestrator, and
   Posture Manager all have the potential to represent SACM Components
   with specific capability interfaces that can be logically specified,
   then bound to one or more specific mechanisms (i.e.  RESTful API,
   [I-D.ietf-mile-rolie], [I-D.ietf-mile-xmpp-grid], and so on).

   An equally plausible way to view the ECP collection architecture
   might be as depicted in Figure 4.











Montville & Munyan        Expires May 26, 2018                  [Page 7]

Internet-Draft              SACM Architecture              November 2017


                 /~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\           Endpoint
Orchestrator     |                   +---------------+ |    +---------------+
 +--------+      |                   |               | |    |               |
 |        |      |                   | +-----------+ | |    | +-----------+ |
 |        |<------------------------>| | Posture   | | |    | | Posture   | |
 |        |      |           RESTful | | Validator | | |    | | Collector | |
 |        |      |           API     | +-----------+ | |    | +-----------+ |
 +--------+      |                   |      |        | |    |      |        |
                 |                   |      |        | |    |      |        |
Evaluator        | Repository        |      |        | |    |      |        |
+------+         | +--------+        | +-----------+ |<---->| +-----------+ |
|      |         | |        |        | | Posture   | |PA/TNC| | Posture   | |
|      |         | |        |        | | Collection| | |    | | Collection| |
|      |<--------->|        |<-------| | Manager   | | |    | | Engine    | |
|      |RESTful  | |        |Direct  | +-----------+ | |    | +-----------+ |
|      |API      | |        |DB Conn |               | |    |               |
|      |         | |        |        |               | |    |               |
+------+         | +--------+        +---------------+ |    +---------------+
                 |                                     |
                 |            Posture Manager          |
                 \~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/

              Figure 4: Alternate ECP Collection Architecture

   Here, the Posture Manager is the collection of Repository, Posture
   Validator, and Posture Collection Manager.  An evaluator could
   connect via a RESTful API, as could an Orchestrator.

Appendix B.  Mapping to RFC8248

   TBD

Authors' Addresses

   Adam W. Montville
   Center for Internet Security
   31 Tech Valley Drive
   East Greenbush, NY  12061
   USA

   Email: adam.w.montville@gmail.com










Montville & Munyan        Expires May 26, 2018                  [Page 8]

Internet-Draft              SACM Architecture              November 2017


   Bill Munyan
   Center for Internet Security
   31 Tech Valley Drive
   East Greenbush, NY  12061
   USA

   Email: bill.munyan.ietf@gmail.com












































Montville & Munyan        Expires May 26, 2018                  [Page 9]

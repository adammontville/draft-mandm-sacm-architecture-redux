



SACM Working Group                                          A. Montville
Internet-Draft                                                 B. Munyan
Intended status: Standards Track                                     CIS
Expires: September 19, 2018                               March 18, 2018


   Security Automation and Continuous Monitoring (SACM) Architecture
                    draft-mandm-sacm-architecture-00

Abstract

   This memo documents the Security Automation and Continuous Monitoring
   (SACM) architecture to be used by SACM participants when crafting
   SACM-related solutions.  The SACM architecture is predicated upon
   information gleaned from SACM Use Cases and Requirements ([RFC7632]
   and [RFC8248] respectively) and terminology as found in
   [I-D.ietf-sacm-terminology].

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 19, 2018.

Copyright Notice

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of




Montville & Munyan     Expires September 19, 2018               [Page 1]

Internet-Draft              SACM Architecture                 March 2018


   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Requirements notation . . . . . . . . . . . . . . . . . .   3
   2.  Terms and Definitions . . . . . . . . . . . . . . . . . . . .   3
   3.  The Basic Architecture  . . . . . . . . . . . . . . . . . . .   3
   4.  SACM Components, Capabilities, and Interfaces . . . . . . . .   5
     4.1.  Components  . . . . . . . . . . . . . . . . . . . . . . .   5
       4.1.1.  Policy Services . . . . . . . . . . . . . . . . . . .   6
       4.1.2.  Software Inventory  . . . . . . . . . . . . . . . . .   7
       4.1.3.  Datastream Collection . . . . . . . . . . . . . . . .  10
       4.1.4.  Network Configuration Collection  . . . . . . . . . .  11
     4.2.  Capabilities  . . . . . . . . . . . . . . . . . . . . . .  11
     4.3.  Interfaces  . . . . . . . . . . . . . . . . . . . . . . .  11
   5.  Open Questions  . . . . . . . . . . . . . . . . . . . . . . .  11
   6.  Privacy Considerations  . . . . . . . . . . . . . . . . . . .  11
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .  11
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  11
   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  12
     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  12
     9.2.  Informative References  . . . . . . . . . . . . . . . . .  12
   Appendix A.  Mapping to RFC8248 . . . . . . . . . . . . . . . . .  13
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  13

1.  Introduction

   The SACM working group has experienced some difficulty gaining
   consensus around a single architectural vision.  Our hope is that
   this document begins to alleviate this.  We have recognized viability
   in approaches sometimes thought to be at odds with each other -
   specifically [I-D.ietf-sacm-ecp] and [I-D.ietf-mile-xmpp-grid].  We
   believe that these approaches complement each other to more
   completely meet the spirit of [RFC7632] and [RFC8248].

   The authors recognize that some state collection mechanisms exist
   today, some do not, and of those that do, some may need to be
   improved.  In other words, we can gain the most advantage by
   supporting a variety of collection mechanisms, including those that
   exist today.  The authors further recognize that SACM ideally intends
   to enable a cooperative ecosystem of tools from disparate sources
   with minimal operator configuration.  The architecture described in
   this document seeks to accommodate these recognitions by first
   defining a generic abstract architecture, then making that
   architecture somewhat more concrete.




Montville & Munyan     Expires September 19, 2018               [Page 2]

Internet-Draft              SACM Architecture                 March 2018


1.1.  Requirements notation

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in RFC
   2119, BCP 14 [RFC2119].

2.  Terms and Definitions

   This draft defers to [I-D.ietf-sacm-terminology] for terms and
   definitions.

3.  The Basic Architecture

   The architectural approach proposed herein recognizes existing state
   collection mechanisms and makes every attempt to respect [RFC7632]
   and [RFC8248].

   +----------+      +------+   +------------+
   |Repository|      |Policy|   |Orchestrator|
   +----^-----+      +--^---+   +----^-------+       +----------------+
     A  |            B  |          C |               | Downstream Uses|
        |               |            |               | +-----------+  |
   +----v---------------v------------v-------+       | |Evaluations|  |
   |             Message Transfer            <-------> +-----------+  |
   +----------------^------------------------+     D | +---------+    |
                    |                                | |Analytics|    |
                    |                                | +---------+    |
            +-------v---------                       | +---------+    |
            | Transfer System |                      | |Reporting|    |
            |    Connector    |                      | +---------+    |
            +-------^---------+                      +----------------+
                    |
                    |
            +-------v-------+
            |   Collection  |
            |     System    |
            +---------------+


                      Figure 1: Notional Architecture

   As shown in Figure 1, the notional SACM architecture consists of some
   basic SACM Components using a message transfer system to communicate.
   While not depicted, the message transfer system is expected to
   maximally align with the requirements described in [RFC8248], which
   means that the message transfer system will support brokered (i.e.
   point-to-point) and proxied data exchange.



Montville & Munyan     Expires September 19, 2018               [Page 3]

Internet-Draft              SACM Architecture                 March 2018


   Additionally, component-specific interfaces (i.e. such as A, B, C,
   and D in Figure 1) are expected to be specified logically then bound
   to one or more specific implementations.  This should be done for
   each capability related to the given SACM Component.

  +----------+      +------+   +------------+
  |Repository|      |Policy|   |Orchestrator|
  +----^-----+      +--^---+   +----^-------+
       |               |            |
       |               |            |
  +----v---------------v------------v-----------------+     +-----------------+
  |                     XMPP-Grid                     <-----> Downstream Uses |
  +-----^-------------^-------------^-------------^---+     +-----------------+
        |             |             |             |
        |             |             |             |
   +----v----+   +----v----+   +----v----+   +----v----+
   |XMPP-Grid|   |XMPP-Grid|   |XMPP-Grid|   |XMPP-Grid|
/~~|Connector|~~~|Connector|~~~|Connector|~~~|Connector|~~\
|  +----^----+   +----^----+   +----^----+   +----^----+  |
|       |             |             |             |       |
|  +----v----+   +----v-----+  +----v----+   +----v----+  |
|  |ECP/SWIMA|   |Datastream|  |YANG Push|   |  IPFIX  |  |
|  +---------+   +----------+  +---------+   +---------+  |
|                      Collectors                         |
\~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/

                      Figure 2: Detailed Architecture

   In Figure 2, we have a more detailed view of the architecture - one
   that fosters the development of a pluggable ecosystem of cooperative
   tools.  Existing collection mechanisms (ECP/SWIMA included) can be
   brought into this architecture by specifying the interface of the
   collector and creating the XMPP-Grid Connector.  Additionally, while
   not directly depicted in Figure 2, this architecture does not
   preclude point-to-point interfaces.  In fact,
   [I-D.ietf-mile-xmpp-grid] provides brokering capabilities to
   facilitate such point-to-point data transfers.  Additionally, each of
   the SACM Components depicted in Figure 2 may be a Provider, a
   Consumer, or both, depending on the circumstance.

   At this point, [I-D.ietf-mile-xmpp-grid] does not provide enough of a
   start for SACM, and there are other XMPP extensions we are likely to
   consider to meet the needs of [RFC7632] and [RFC8248].  Specifically,
   the authors would propose work to extend (or modify)
   [I-D.ietf-mile-xmpp-grid] to include additional XEPs, possibly the
   following:





Montville & Munyan     Expires September 19, 2018               [Page 4]

Internet-Draft              SACM Architecture                 March 2018


   o  Entity Capabilities (XEP-0115): May be used to express the
      specific capabilities that a particular client embodies.

   o  Form Discovery and Publishing (XEP-0346): May be used for
      datastream examples requiring some expression of a request
      followed by an expected response.

   o  Ad Hoc Commands (XEP-0050): May be usable for simple orchestration
      (i.e. "do assessment").

   o  File Repository and Sharing (XEP-0214): Appears to be needed for
      handling large amounts of data (if not fragmenting).

   o  Publishing Stream Initiation Requests (XEP-0137): Provides ability
      to stream information between two XMPP entities.

   o  PubSub Collection Nodes (XEP-0248): Nested topics for
      specialization to the leaf node level.

   o  Security Labels In Pub/Sub (XEP-0314): Enables tagging data with
      classification categories.

   o  PubSub Chaining (XEP-0253): Federation of publishing nodes
      enabling a publish node of one server to be a subscriber to a
      publishing node of another server

   o  Easy User Onboarding (XEP-0253): Simplified client registration

4.  SACM Components, Capabilities, and Interfaces

   As previously mentioned, the SACM Architecture consists of a variety
   of SACM Components, and named components are intended to embody one
   or more specific capabilities.  Interacting with these capabilities
   will require at least two levels of interface specification.  The
   first is a logical interface specification, and the second is at
   least one binding to a specific transfer mechanism, where the
   preferred transfer mechanism would be XMPP-grid.

   The scenarios described in this section are informational, but may be
   taken as guidance or a starting point for further specifications
   concerning each of these areas.

4.1.  Components

   The list of SACM Components is theoretically endless, but we need to
   start somewhere.  The following is a list of suggested SACM Component
   classes and specializations.




Montville & Munyan     Expires September 19, 2018               [Page 5]

Internet-Draft              SACM Architecture                 March 2018


   o  Repository

      *  Vulnerability Information Repository

      *  Software Inventory Repository

      *  Configuration Policy Repository

      *  Configuration State Repository

   o  Collector

      *  Software Inventory Collector

      *  State Collector

   o  Evaluator

      *  Software Inventory Evaluator

      *  State Evaluator

   o  Orchestrator

      *  Vulnerability Management Orchestrator

      *  Configuration Management Orchestrator

4.1.1.  Policy Services

   Consider a policy server conforming to [I-D.ietf-mile-rolie].
   [I-D.ietf-mile-rolie] describes a RESTful way based on the ATOM
   Publishing Protocol ([RFC5023]) to find specific data collections.
   While this represents a specific binding (i.e.  RESTful API based on
   [RFC5023]), there is a more abstract way to look at ROLIE.

   ROLIE provides notional workspaces and collections, and provides the
   concept of information categories and links.  Strictly speaking,
   these are logical concepts independent of the RESTful binding ROLIE
   specifies.  In other words, ROLIE binds a logical interface (i.e.
   GET workspace, GET collection, SET entry, and so on) to a specific
   mechanism (namely an ATOM Publication Protocol extension).

   It is not inconceivable to believe there could be a different
   interface mechanism, or a connector, providing these same operations
   using XMPP-Grid as the transfer mechanism.





Montville & Munyan     Expires September 19, 2018               [Page 6]

Internet-Draft              SACM Architecture                 March 2018


4.1.2.  Software Inventory

   The SACM working group has accepted work on the Endpoint Compliance
   Profile [I-D.ietf-sacm-ecp], which describes a collection
   architecture and may be viewed as a collector coupled with a
   collection-specific repository.

                                 Posture Manager              Endpoint
                Orchestrator    +---------------+        +---------------+
                +--------+      |               |        |               |
                |        |      | +-----------+ |        | +-----------+ |
                |        |<---->| | Posture   | |        | | Posture   | |
                |        | pub/ | | Validator | |        | | Collector | |
                |        | sub  | +-----------+ |        | +-----------+ |
                +--------+      |      |        |        |      |        |
                                |      |        |        |      |        |
Evaluator       Repository      |      |        |        |      |        |
+------+        +--------+      | +-----------+ |<-------| +-----------+ |
|      |        |        |      | | Posture   | | report | | Posture   | |
|      |        |        |      | | Collection| |        | | Collection| |
|      |<-----> |        |<-----| | Manager   | | query  | | Engine    | |
|      |request/|        | store| +-----------+ |------->| +-----------+ |
|      |respond |        |      |               |        |               |
|      |        |        |      |               |        |               |
+------+        +--------+      +---------------+        +---------------+


                   Figure 3: ECP Collection Architecture

   In Figure 3, any of the communications between the Posture Manager
   and ECP components to its left could be performed directly or
   indirectly using a given message transfer mechanism.  For example,
   the pub/sub interface between the Orchestrator and the Posture
   Manager could be using a proprietary method or using
   [I-D.ietf-mile-xmpp-grid] or some other pub/sub mechanism.
   Similarly, the store connection from the Posture Manager to the
   Repository could be performed internally to a given implementation,
   via a RESTful API invocation over HTTPS, or even over a pub/sub
   mechanism.

   Our assertion is that the Evaluator, Repository, Orchestrator, and
   Posture Manager all have the potential to represent SACM Components
   with specific capability interfaces that can be logically specified,
   then bound to one or more specific transfer mechanisms (i.e.  RESTful
   API, [I-D.ietf-mile-rolie], [I-D.ietf-mile-xmpp-grid], and so on).

   An equally plausible way to view the ECP collection architecture
   might be as depicted in Figure 4.



Montville & Munyan     Expires September 19, 2018               [Page 7]

Internet-Draft              SACM Architecture                 March 2018


                 /~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\           Endpoint
Orchestrator     |                   +---------------+ |    +---------------+
 +--------+      |                   |               | |    |               |
 |        |      |                   | +-----------+ | |    | +-----------+ |
 |        |<------------------------>| | Posture   | | |    | | Posture   | |
 |        |      |           RESTful | | Validator | | |    | | Collector | |
 |        |      |           API     | +-----------+ | |    | +-----------+ |
 +--------+      |                   |      |        | |    |      |        |
                 |                   |      |        | |    |      |        |
Evaluator        | Repository        |      |        | |    |      |        |
+------+         | +--------+        | +-----------+ |<---->| +-----------+ |
|      |         | |        |        | | Posture   | |PA/TNC| | Posture   | |
|      |         | |        |        | | Collection| | |    | | Collection| |
|      |<--------->|        |<-------| | Manager   | | |    | | Engine    | |
|      |RESTful  | |        |Direct  | +-----------+ | |    | +-----------+ |
|      |API      | |        |DB Conn |               | |    |               |
|      |         | |        |        |               | |    |               |
+------+         | +--------+        +---------------+ |    +---------------+
                 |                                     |
                 |            Posture Manager          |
                 \~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/

              Figure 4: Alternate ECP Collection Architecture

   Here, the Posture Manager is the aggregate of Repository, Posture
   Validator, and Posture Collection Manager.  An evaluator could
   connect via a RESTful API, as could an Orchestrator.  Alternatively,
   and as depicted in Figure 5, the Posture Manager could interact with
   other security ecosystem components using an XMPP-Grid connector.






















Montville & Munyan     Expires September 19, 2018               [Page 8]

Internet-Draft              SACM Architecture                 March 2018


                 /~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\           Endpoint
Orchestrator     |                   +---------------+ |    +---------------+
 +--------+      |                   |               | |    |               |
 |        |      |                   | +-----------+ | |    | +-----------+ |
 |        |<------------------------>| | Posture   | | |    | | Posture   | |
 |        |      |         XMPP-Grid | | Validator | | |    | | Collector | |
 |        |      |         Connector | +-----------+ | |    | +-----------+ |
 +--------+      |                   |      |        | |    |      |        |
                 |                   |      |        | |    |      |        |
Evaluator        | Repository        |      |        | |    |      |        |
+------+         | +--------+        | +-----------+ |<---->| +-----------+ |
|      |         | |        |        | | Posture   | |PA/TNC| | Posture   | |
|      |         | |        |        | | Collection| | |    | | Collection| |
|      |<--------->|        |<-------| | Manager   | | |    | | Engine    | |
|      |XMPP-Grid| |        |Direct  | +-----------+ | |    | +-----------+ |
|      |Connector| |        |DB Conn |               | |    |               |
|      |         | |        |        |               | |    |               |
+------+         | +--------+        +---------------+ |    +---------------+
                 |                                     |
                 |            Posture Manager          |
                 \~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/

              Figure 5: Alternate ECP Collection Architecture

   There is yet another alternative (see Figure 6) that could be worth
   exploring.  What if the connection between an ECP posture collection
   group (Posture Collection and Posture Collection Engine together) and
   the Posture Manager were not done over PA/TNC but instead via XMPP?
   In such a scenario, the software running on the Endpoint would
   essentially be an posture collector that is an XMPP entity
   participating in the SACM-extended XMPP-grid.




















Montville & Munyan     Expires September 19, 2018               [Page 9]

Internet-Draft              SACM Architecture                 March 2018


                                                             Endpoint
  Posture Manager     +------------+      +------+      +---------------+
+----------------+    |Orchestrator+------+      |      |               |
| +------------+ |    +------------+      |      |      | +-----------+ |
| | Posture    | |                        |      |      | | Posture   | |
| | Validator  | |    +------------+      |XMPP  |      | | Collector | |
| +------------+ |    | Evaluator  |------|GRID  |      | +-----------+ |
|       |        |    +------------+      |CNTRLR|      |      |        |
| +------------+ |                        |      |      | +-----------+ |
| | Posture    | |                        |      |      | | Posture   | |
| | Collection | |                        |      |      | | Collection| |
| | Manager    | |------------------------|      |------| | Engine    | |
| +------------+ |                        |      |      | +-----------+ |
|                |                        +------+      +---------------+
| +------------+ |
| | Repository | |
| +------------+ |
+----------------+

        Figure 6: Yet Another Alternate ECP Collection Architecture

4.1.3.  Datastream Collection

   The NIST 800-126 specification, also known as SCAP 1.2, provides the
   technical specifications for a "datastream collection".  The
   specification describes the "datastream collection" as being
   "composed of SCAP data streams and SCAP source components".  A
   "datastream" provides an encapsulation of the SCAP source components
   required to, for example, perform configuration assessment on a given
   endpoint.  These source components include XCCDF checklists, OVAL
   Definitions, and CPE Dictionary information.  A single "datastream
   collection" may encapsulate multiple "datastreams", and reference any
   number of SCAP components.  Datastream collections were intended to
   provide an envelope enabling transfer of SCAP data more easily.

   The NIST 800-126 specification also defines the "SCAP result data
   stream" as being conformant to the Asset Reporting Format
   specification, defined in NISTIR-7694.  The Asset Reporting Format
   provides an encapsulation of the SCAP source components, Asset
   Information, and SCAP result components, such as system
   characteristics and state evaluation results.

   What NIST 800-126 did not do is specify the interface for finding or
   acquiring source datastream information, nor an interface for
   publishing result information.  Discovering the actual resources for
   this information could be done via ROLIE, as described in the Policy
   Services section above, but other repositories of SCAP data exist as
   well.



Montville & Munyan     Expires September 19, 2018              [Page 10]

Internet-Draft              SACM Architecture                 March 2018


4.1.4.  Network Configuration Collection

   Henk's draft illustrates a SACM Component incorporating a YANG Push
   client function and an XMPP-grid publisher function.  Henk's draft
   further states "the output of the YANG Push client function is
   encapsulated in a SACM Content Element envelope, which is again
   encapsulated in a SACM statement envelope" which are published,
   essentially, via an XMPP-Grid Connector for SACM Components also part
   of the XMPP-Grid.

   This is a specific example of an existing collection mechanism being
   adapted to the XMPP-Grid message transfer system.

4.2.  Capabilities

   Repositories will have a need for fairly standard CRUD operations and
   query by attribute operations.  Collector interfaces may enable ad
   hoc assessment (on-demand processing), state item watch actions (i.e.
   watch a particular item for particular change), persisting other
   behaviors (i.e. setting some mandatory reporting period).  Evaluators
   may have their own set of interfaces, and an Assessor would represent
   both Collector and Evaluation interfaces, and may have additional
   concerns added to an Assessor Interface.

4.3.  Interfaces

   TBD

5.  Open Questions

   TBD

6.  Privacy Considerations

   TODO

7.  Security Considerations

   TODO

8.  IANA Considerations

   IANA tables can probably be used to make life a little easier.  We
   would like a place to enumerate:

   o  Capability/operation semantics

   o  SACM Component implementation identifiers



Montville & Munyan     Expires September 19, 2018              [Page 11]

Internet-Draft              SACM Architecture                 March 2018


   o  SACM Component versions

   o  Associations of SACM Components (and versions) to specific
      Capabilities

9.  References

9.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997, <https://www.rfc-
              editor.org/info/rfc2119>.

9.2.  Informative References

   [I-D.ietf-mile-rolie]
              Field, J., Banghart, S., and D. Waltermire, "Resource-
              Oriented Lightweight Information Exchange", draft-ietf-
              mile-rolie-16 (work in progress), December 2017.

   [I-D.ietf-mile-xmpp-grid]
              Cam-Winget, N., Appala, S., Pope, S., and P. Saint-Andre,
              "Using XMPP for Security Information Exchange", draft-
              ietf-mile-xmpp-grid-05 (work in progress), February 2018.

   [I-D.ietf-sacm-ecp]
              Haynes, D., Fitzgerald-McKay, J., and L. Lorenzin,
              "Endpoint Compliance Profile", draft-ietf-sacm-ecp-01
              (work in progress), January 2018.

   [I-D.ietf-sacm-nea-swid-patnc]
              Schmidt, C., Haynes, D., Coffin, C., Waltermire, D., and
              J. Fitzgerald-McKay, "Software Inventory Message and
              Attributes (SWIMA) for PA-TNC", draft-ietf-sacm-nea-swid-
              patnc-01 (work in progress), March 2017.

   [I-D.ietf-sacm-terminology]
              Birkholz, H., Lu, J., Strassner, J., Cam-Winget, N., and
              A. Montville, "Security Automation and Continuous
              Monitoring (SACM) Terminology", draft-ietf-sacm-
              terminology-14 (work in progress), December 2017.

   [RFC5023]  Gregorio, J., Ed. and B. de hOra, Ed., "The Atom
              Publishing Protocol", RFC 5023, DOI 10.17487/RFC5023,
              October 2007, <https://www.rfc-editor.org/info/rfc5023>.





Montville & Munyan     Expires September 19, 2018              [Page 12]

Internet-Draft              SACM Architecture                 March 2018


   [RFC7632]  Waltermire, D. and D. Harrington, "Endpoint Security
              Posture Assessment: Enterprise Use Cases", RFC 7632,
              DOI 10.17487/RFC7632, September 2015, <https://www.rfc-
              editor.org/info/rfc7632>.

   [RFC8248]  Cam-Winget, N. and L. Lorenzin, "Security Automation and
              Continuous Monitoring (SACM) Requirements", RFC 8248,
              DOI 10.17487/RFC8248, September 2017, <https://www.rfc-
              editor.org/info/rfc8248>.

Appendix A.  Mapping to RFC8248

   TBD

Authors' Addresses

   Adam W. Montville
   Center for Internet Security
   31 Tech Valley Drive
   East Greenbush, NY  12061
   USA

   Email: adam.w.montville@gmail.com


   Bill Munyan
   Center for Internet Security
   31 Tech Valley Drive
   East Greenbush, NY  12061
   USA

   Email: bill.munyan.ietf@gmail.com



















Montville & Munyan     Expires September 19, 2018              [Page 13]
